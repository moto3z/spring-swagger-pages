buildscript {
    ext {
        restdocsApiSpecVersion = '0.16.4'
        snippetsDir = file('./build/generated-snippets')
    }

//    repositories {
//        maven {
//            url "https://plugins.gradle.org/m2/" //1.1
//        }
//    }
    dependencies {
        classpath "com.epages:restdocs-api-spec-gradle-plugin:${restdocsApiSpecVersion}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    //restdocs plugin
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	//id 'com.epages.restdocs-api-spec' version '0.18.2'
    //swagger generator plugin
    id 'org.hidetake.swagger.generator' version '2.18.2'

    id "org.asciidoctor.jvm.convert" version "3.3.2"
//    id 'org.asciidoctor.convert' version '1.5.8'


}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //spring rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //restdocs-api-spec
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.5'
    // Use the appropriate version
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}


tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

bootJar {
    dependsOn(':openapi3')
}

openapi3 {
    server = "https://도메인.io"
    title = "API 문서"
    description = "Spring REST Docs with SwaggerUI"
    version = "0.0.1"
    //outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'
    //tagDescriptionsPropertiesFile = 'src/docs/tag-descriptions.yaml'
    version = '0.1.0'
    format = 'yaml'
    // /static/docs/open-api-3.0.1.json 생성 → jar 파일만 배포할 예정이기에 build 에 출력
    //outputDirectory = 'build/resources/main/static/docs'
}


asciidoctor {
    inputs.dir snippetsDir
    // 다른 Task 에 의존한다는 것을 알리는 것이다.
    // test Task 에 의존함을 알린다.
    // asciidoctor task 를 실행할 때, test task 를 먼저 실행한다.
    dependsOn test
}


tasks.withType(GenerateSwaggerUI) {
    //https://thalals.tistory.com/433#google_vignette
    dependsOn 'openapi3'

    //기존 파일 삭제했다가, build 에 출력한 json 정적파일 복사 (안해도 됨 → local 확인용)
    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"

    }
}

